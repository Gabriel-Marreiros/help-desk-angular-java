pipeline {
    
    agent {
        label 'master'
    }
    
    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-credentials')
        DOCKER_CONTAINER_NAME = 'help-desk-angular-java-backend'
        DOCKER_IMAGE_NAME = 'gabrielmarreiros/help-desk-angular-java-backend'
        DOCKER_IMAGE_TAG = 'latest'
    }
    
    stages {

        stage('Unit Tests') {
            agent {
                docker {
                    image 'maven:3.9.9-eclipse-temurin-17-alpine' 
                    reuseNode true
                }
            }
            
            steps {
                dir('backend') {
                    echo 'Running unit tests...'
                    
                    sh 'mvn test'
                    
                    echo 'Generating reports with JUnit reports...'
                    
                    junit('./target/surefire-reports/*.xml')
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                dir('backend') {
                    echo 'Building the Docker image...'

                    sh 'docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} . --no-cache'
                } 
            }
        }
        
        stage('Push Image to Docker Hub') {
            steps {
                echo 'Pushing Docker image to Docker Hub...'
                
                sh 'docker login -u $DOCKER_HUB_CREDENTIALS_USR -p $DOCKER_HUB_CREDENTIALS_PSW'

                sh 'docker push ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}'
            }
        }
        
        stage('Deploy on Server') {
            steps {
                echo 'Deploying the Docker image to the server...'  
                
                sshagent(['server-access']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no root@gabrielmarreiros.com.br "
                            docker stop ${DOCKER_CONTAINER_NAME} &&
                            docker rm ${DOCKER_CONTAINER_NAME} &&
                            docker rmi ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} &&
                            cd docker_composes/help-desk-angular-java &&
                            docker-compose up -d backend
                        "
                    """
                }
            }
        }
    }
    
    post { 
        always { 
            echo 'Deleting images with tag <none>'
            sh 'docker rmi $(docker images -f "dangling=true" -q) --force'

            echo 'Cleaning up the Workspace...'
            cleanWs()
        }
    }
}